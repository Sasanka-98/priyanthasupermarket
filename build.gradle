plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'lk'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* to use JPA to store data in a relational database */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	/* to create HTML templates with embedded server-side expressions which render data from the backend dynamically */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	
	/* for back-end validation through entity class */
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	/* to run web application on a web server */
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	/* to offer various annotations aimed at replacing Java code that has to be repititive, tedious to write */
	compileOnly 'org.projectlombok:lombok'
	
	/* automatically restart application whenever files on the classpath change */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	/* to establish connection between server and application */
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
